<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Harry&#39;s Dev Story</title>
    <link>https://blog.harrydev.io/</link>
    <description>Recent content on Harry&#39;s Dev Story</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ko-kr</language>
    <lastBuildDate>Mon, 12 Aug 2019 03:00:00 +0900</lastBuildDate>
    
	<atom:link href="https://blog.harrydev.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>[Blog Setup] 3.Travis CI로 Github Pages에 Blog 배포하기.</title>
      <link>https://blog.harrydev.io/posts/dev/2019/08/deploy-blog-to-github-pages-with-travis/</link>
      <pubDate>Mon, 12 Aug 2019 03:00:00 +0900</pubDate>
      
      <guid>https://blog.harrydev.io/posts/dev/2019/08/deploy-blog-to-github-pages-with-travis/</guid>
      <description>지난 글에서 Hugo로 Static Page를 생성해 보았다.
이제 다른 사람이 볼 수 있도록 웹에 서비스를 배포할 차례이다
​
이를 위해서는 다양한 방법이 존재 하며 원하는 방식으로 선택을 하면 된다.
 낮은 사양의 컴퓨터를 사용하여 개인 서버를 운영 하면서 서비스 AWS의 S3를 이용하여 서비스 ( + CloudFront를 연동) GCP의 CloudStorage를 이용하여 서비스 ( + Cloud Load Balancing(+ Cloud CDN)을 연동) Firebase를 이용하여 서비스 Heroku를 이용하여 서비스 Netlify를 이용하여 서비스 Github Pages를 이용하여 서비스 그 외&amp;hellip;  그 중 비용 생각 안해도 되고 Custom Domain연동에 HTTPS도 지원하는 Github Pages를 사용하도록 하겠다.</description>
    </item>
    
    <item>
      <title>[Blog Setup] 2.Hugo를 이용한 Static Page 생성</title>
      <link>https://blog.harrydev.io/posts/dev/2019/08/hugo_basic/</link>
      <pubDate>Fri, 09 Aug 2019 12:30:00 +0900</pubDate>
      
      <guid>https://blog.harrydev.io/posts/dev/2019/08/hugo_basic/</guid>
      <description>Hugo를 사용하기로 하였으니 간단한 사용법을 정리해 보려고 한다.
사실 Hugo 사이트에 아주 잘 설명이 되어 있다.
​
먼저 설치를 해보도록 하자.
# 설치를 위한 다양한 방법을 지원하고 있다. # brew를 이용하여 (mac, linux) $ brew install hugo # snap을 이용하여 (linux) $ snap install hugo # chocolatey를 이용하여 (windows) $ choco install hugo # source를 받아서 직접. $ git clone https://github.com/gohugoio/hugo.git &amp;amp;&amp;amp; \ cd hugo &amp;amp;&amp;amp; \ go install # 만일 Sass/SCSS를 사용할 예정이라면 &amp;gt; go install --tags extended # 혹은 binary 다운로드 : https://github.</description>
    </item>
    
    <item>
      <title>[Blog Setup] 1.블로그를 새로 시작하며...</title>
      <link>https://blog.harrydev.io/posts/story/2019/07/restart_blog/</link>
      <pubDate>Wed, 24 Jul 2019 00:10:00 +0900</pubDate>
      
      <guid>https://blog.harrydev.io/posts/story/2019/07/restart_blog/</guid>
      <description>블로그를 새롭게 설정하면서 했던 부분들을 정리해 보려고 한다.
​
이전에는 Naver Blog를 지나 Tistory에서 몇개의 글을 적고..
GitHub Page로 넘어와 Jekyll를 TravisCI를 이용하여 사용하고 있었다. 글은 하나밖에 없었지만..
기본적으로 GitHub Page에서 제공하는 Jekyll는 몇가지 Plugin만을 제공하고 있었고 그래서 TravisCI를 통해서 Build하고 Publish하는 방법으로 사용을 하고 있었다.
source &#39;https://rubygems.org&#39; gem &#39;jekyll&#39;, &#39;~&amp;gt; 3.2.0&#39; gem &#39;jekyll-sitemap&#39; gem &#39;jekyll-multiple-languages&#39; gem &#39;jekyll-paginate&#39; gem &#39;wdm&#39;, &#39;&amp;gt;= 0.1.0&#39; if Gem.win_platform? gem &#39;octopress&#39; gem &#39;jekyll-gist&#39; gem &#39;fast-stemmer&#39; gem &#39;classifier-reborn&#39; gem &#39;rouge&#39; gem &#39;html-proofer&#39;, &#39;~&amp;gt; 2.</description>
    </item>
    
  </channel>
</rss>